@page "/proposal/delete"
@using frontend_GGST_infohub.DTO
@using System.Text.Json
@using System.Text
@using System.Data;
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>ProposalDTO</h4>
    <hr />
    @if (proposal is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Character</dt>
            <dd class="col-sm-10">@proposal.character</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Accepted</dt>
            <dd class="col-sm-10">@proposal.accepted</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ParagraphName</dt>
            <dd class="col-sm-10">@proposal.paragraphName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Text</dt>
            <dd class="col-sm-10">@proposal.text</dd>
        </dl>
        <EditForm method="post" Model="@proposal" OnValidSubmit="DeleteProposalDTO" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(proposal is null)">Delete</button> |
            <a href="/proposaldtos">Back to List</a>
        </EditForm>
    }
</div>

@code {
    public ProposalDTO proposal { get; set; }

    string GetQueryParm(string parmName)
    {
        var uriBuilder = new UriBuilder(NavigationManager.Uri);
        var q = System.Web.HttpUtility.ParseQueryString(uriBuilder.Query);
        return q[parmName] ?? "";
    }

    protected override async Task OnInitializedAsync()
    {
        HttpClient client = new HttpClient();
        string url = "https://proposal-service.purpledune-96ff6deb.ukwest.azurecontainerapps.io/api/Proposal/" + GetQueryParm("id");
        var response = await client.GetAsync(url);
        var result = await response.Content.ReadAsStringAsync();
        proposal = JsonSerializer.Deserialize<ProposalDTO>(result);

        if (proposal is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteProposalDTO()
    {
        var data = new
        {
            id = proposal.id,
            character = proposal.character,
            accepted = proposal.accepted,
            paragraphName = proposal.paragraphName,
            text = proposal.text
        };
        var jsonData = JsonSerializer.Serialize(data);
        var content = new StringContent(jsonData, Encoding.UTF8, "application/json");

        using (var client = new HttpClient())
        {
            try
            {
                HttpRequestMessage request = new HttpRequestMessage
                    {
                        Content = content,
                        Method = HttpMethod.Delete,
                        RequestUri = new Uri("https://proposal-service.purpledune-96ff6deb.ukwest.azurecontainerapps.io/api/Proposal")
                    };
                // Send the PUT request
                HttpResponseMessage response = await client.SendAsync(request);


                // Ensure we get a successful response.
                response.EnsureSuccessStatusCode();

                // Read and process the response body (if needed)
                string responseBody = await response.Content.ReadAsStringAsync();
            }
            catch (HttpRequestException e)
            {
                // Handle any exceptions that occur during the request
                Console.WriteLine("\nException Caught!");
                Console.WriteLine("Message :{0} ", e.Message);
            }
        }
        NavigationManager.NavigateTo("/proposal");
    }
}